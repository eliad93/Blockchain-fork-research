from blockchain_simulator import SystemProperties, System

# string of 10 nodes
graph1 = [[0., 1., -1., -1., -1., -1., -1., -1., -1., -1.],
          [1., 0., 1., -1., -1., -1., -1., -1., -1., -1.],
          [-1., 1., 0., 1., -1., -1., -1., -1., -1., -1.],
          [-1., -1., 1., 0., 1., -1., -1., -1., -1., -1.],
          [-1., -1., -1., 1., 0., 1., -1., -1., -1., -1.],
          [-1., -1., -1., -1., 1., 0., 1., -1., -1., -1.],
          [-1., -1., -1., -1., -1., 1., 0., 1., -1., -1.],
          [-1., -1., -1., -1., -1., -1., 1., 0., 1., -1.],
          [-1., -1., -1., -1., -1., -1., -1., 1., 0., 1.],
          [-1., -1., -1., -1., -1., -1., -1., -1., 1., 0.]]

power_list1 = [1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]

# 2 strings of 7 nodes connected in the middle
graph2 = [[0., 1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1.],
          [1., 0., 1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1.],
          [-1., 1., 0., 1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1.],
          [-1., -1., 1., 0., 1., -1., -1., -1., -1., -1., 1., -1., -1., -1.],
          [-1., -1., -1., 1., 0., 1., -1., -1., -1., -1., -1., -1., -1., -1.],
          [-1., -1., -1., -1., 1., 0., 1., -1., -1., -1., -1., -1., -1., -1.],
          [-1., -1., -1., -1., -1., 1., 0., -1., -1., -1., -1., -1., -1., -1.],
          [-1., -1., -1., -1., -1., -1., -1., 0., 1., -1., -1., -1., -1., -1.],
          [-1., -1., -1., -1., -1., -1., -1., 1., 0., 1., -1., -1., -1., -1.],
          [-1., -1., -1., -1., -1., -1., -1., -1., 1., 0., 1., -1., -1., -1.],
          [-1., -1., -1., 1., -1., -1., -1., -1., -1., 1., 0., 1., -1., -1.],
          [-1., -1., -1., -1., -1., -1., -1., -1., -1., -1., 1., 0., 1., -1.],
          [-1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., 1., 0., 1.],
          [-1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., -1., 1., 0.]]

power_list2 = [1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]

# 2 nodes with big and symmetric propagation time
graph3 = [[0., 999999.],
          [999999., 0.]]

power_list3 = [1., 1.]

power_list4 = [1., 1.01]

power_list5 = [1., 2.]

# 20 connected nodes with small propagation time
graph4 = [[0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
          [1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
          [1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
          [1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
          [1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
          [1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
          [1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
          [1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
          [1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
          [1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
          [1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1., 1.],
          [1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1., 1.],
          [1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1., 1.],
          [1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1., 1.],
          [1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1., 1.],
          [1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1., 1.],
          [1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1., 1.],
          [1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1., 1.],
          [1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0., 1.],
          [1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 0.]]

power_list6 = [1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]

power_list7 = [1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.]

# 20 connected nodes with no propagation time
graph5 = [[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
          [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]]

power_list8 = [1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]

power_list9 = [1., 2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 15., 16., 17., 18., 19., 20.]

# 10 nodes cycle
graph6 = [[0., 1., -1., -1., -1., -1., -1., -1., -1., 1.],
          [1., 0., 1., -1., -1., -1., -1., -1., -1., -1.],
          [-1., 1., 0., 1., -1., -1., -1., -1., -1., -1.],
          [-1., -1., 1., 0., 1., -1., -1., -1., -1., -1.],
          [-1., -1., -1., 1., 0., 1., -1., -1., -1., -1.],
          [-1., -1., -1., -1., 1., 0., 1., -1., -1., -1.],
          [-1., -1., -1., -1., -1., 1., 0., 1., -1., -1.],
          [-1., -1., -1., -1., -1., -1., 1., 0., 1., -1.],
          [-1., -1., -1., -1., -1., -1., -1., 1., 0., 1.],
          [1., -1., -1., -1., -1., -1., -1., -1., 1., 0.]]

power_list10 = [1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]

power_list11 = [9., 1., 1., 1., 1., 9., 1., 1., 1., 1.]

# 2 connected cycles with 6 nodes each (1 shared node)
graph7 = [[0., 1., -1., -1., -1., 1., -1., -1., -1., -1., -1.],
          [1., 0., 1., -1., -1., -1., -1., -1., -1., -1., -1.],
          [-1., 1., 0., 1., -1., -1., -1., -1., -1., -1., -1.],
          [-1., -1., 1., 0., 1., -1., -1., -1., -1., -1., -1.],
          [-1., -1., -1., 1., 0., 1., -1., -1., -1., -1., -1.],
          [1., -1., -1., -1., 1., 0., 1., -1., -1., -1., 1.],
          [-1., -1., -1., -1., -1., 1., 0., 1., -1., -1., -1.],
          [-1., -1., -1., -1., -1., -1., 1., 0., 1., -1., -1.],
          [-1., -1., -1., -1., -1., -1., -1., 1., 0., 1., -1.],
          [-1., -1., -1., -1., -1., -1., -1., -1., 1., 0., 1.],
          [-1., -1., -1., -1., -1., 1., -1., -1., -1., 1., 0.]]

power_list12 = [1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]

# 2-regular bipartite graph with 10 nodes at each side
graph8 = [[0., -1., -1., -1., -1., -1., -1., -1., -1., -1., 1., 1., -1., -1., -1., -1., -1., -1., -1., -1.],
          [-1., 0., -1., -1., -1., -1., -1., -1., -1., -1., -1., 1., 1., -1., -1., -1., -1., -1., -1., -1.],
          [-1., -1., 0., -1., -1., -1., -1., -1., -1., -1., -1., -1., 1., 1., -1., -1., -1., -1., -1., -1.],
          [-1., -1., -1., 0., -1., -1., -1., -1., -1., -1., -1., -1., -1., 1., 1., -1., -1., -1., -1., -1.],
          [-1., -1., -1., -1., 0., -1., -1., -1., -1., -1., -1., -1., -1., -1., 1., 1., -1., -1., -1., -1.],
          [-1., -1., -1., -1., -1., 0., -1., -1., -1., -1., -1., -1., -1., -1., -1., 1., 1., -1., -1., -1.],
          [-1., -1., -1., -1., -1., -1., 0., -1., -1., -1., -1., -1., -1., -1., -1., -1., 1., 1., -1., -1.],
          [-1., -1., -1., -1., -1., -1., -1., 0., -1., -1., -1., -1., -1., -1., -1., -1., -1., 1., 1., -1.],
          [-1., -1., -1., -1., -1., -1., -1., -1., 0., -1., -1., -1., -1., -1., -1., -1., -1., -1., 1., 1.],
          [-1., -1., -1., -1., -1., -1., -1., -1., -1., 0., 1., -1., -1., -1., -1., -1., -1., -1., -1., 1.],
          [1., -1., -1., -1., -1., -1., -1., -1., -1., 1., 0., -1., -1., -1., -1., -1., -1., -1., -1., -1.],
          [1., 1., -1., -1., -1., -1., -1., -1., -1., -1., -1., 0., -1., -1., -1., -1., -1., -1., -1., -1.],
          [-1., 1., 1., -1., -1., -1., -1., -1., -1., -1., -1., -1., 0., -1., -1., -1., -1., -1., -1., -1.],
          [-1., -1., 1., 1., -1., -1., -1., -1., -1., -1., -1., -1., -1., 0., -1., -1., -1., -1., -1., -1.],
          [-1., -1., -1., 1., 1., -1., -1., -1., -1., -1., -1., -1., -1., -1., 0., -1., -1., -1., -1., -1.],
          [-1., -1., -1., -1., 1., 1., -1., -1., -1., -1., -1., -1., -1., -1., -1., 0., -1., -1., -1., -1.],
          [-1., -1., -1., -1., -1., 1., 1., -1., -1., -1., -1., -1., -1., -1., -1., -1., 0., -1., -1., -1.],
          [-1., -1., -1., -1., -1., -1., 1., 1., -1., -1., -1., -1., -1., -1., -1., -1., -1., 0., -1., -1.],
          [-1., -1., -1., -1., -1., -1., -1., 1., 1., -1., -1., -1., -1., -1., -1., -1., -1., -1., 0., -1.],
          [-1., -1., -1., -1., -1., -1., -1., -1., 1., 1., -1., -1., -1., -1., -1., -1., -1., -1., -1., 0.]]

power_list13 = [1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.]

def main():
    # props1 = SystemProperties(graph1, power_list1, 2016, 600.)
    # system1 = System(1, props1)
    # props2 = SystemProperties(graph2, power_list2, 2016, 600.)
    # system2 = System(2, props2)
    # props3 = SystemProperties(graph3, power_list3, 2016, 600.)
    # system3 = System(3, props3)
    # props4 = SystemProperties(graph3, power_list4, 2016, 600.)
    # system4 = System(4, props4)
    # props5 = SystemProperties(graph3, power_list5, 2016, 600.)
    # system5 = System(5, props5)
    # props6 = SystemProperties(graph3, power_list3, 999999999999999999999, 600.)
    # system6 = System(6, props6)
    # props7 = SystemProperties(graph3, power_list4, 999999999999999999999, 600.)
    # system7 = System(7, props7)
    # props8 = SystemProperties(graph4, power_list6, 2016, 600.)
    # system8 = System(8, props8)
    # props9 = SystemProperties(graph4, power_list7, 2016, 600.)
    # system9 = System(9, props9)
    # props10 = SystemProperties(graph5, power_list8, 2016, 600.)
    # system10 = System(10, props10)
    # props11 = SystemProperties(graph5, power_list9, 2016, 600.)
    # system11 = System(11, props11)
    # props12 = SystemProperties(graph6, power_list10, 2016, 600.)
    # system12 = System(12, props12)
    # props13 = SystemProperties(graph6, power_list11, 2016, 600.)
    # system13 = System(13, props13)
    # props14 = SystemProperties(graph7, power_list12, 2016, 600.)
    # system14 = System(14, props14)
    props15 = SystemProperties(graph8, power_list13, 2016, 600.)
    system15 = System(15, props15)
    for i in range(300000):
        # system1.step()
        # system2.step()
        # system3.step()
        # system4.step()
        # system5.step()
        # system6.step()
        # system7.step()
        # system8.step()
        # system9.step()
        # system10.step()
        # system11.step()
        # system12.step()
        # system13.step()
        # system14.step()
        system15.step()
    # system1.print_nodes_ledgers()
    # system2.print_nodes_ledgers()
    # system3.print_nodes_ledgers()
    # system4.print_nodes_ledgers()
    # system5.print_nodes_ledgers()
    # system6.print_nodes_ledgers()
    # system7.print_nodes_ledgers()
    # system8.print_nodes_ledgers()
    # system9.print_nodes_ledgers()
    # system10.print_nodes_ledgers()
    # system11.print_nodes_ledgers()
    # system12.print_nodes_ledgers()
    # system13.print_nodes_ledgers()
    # system14.print_nodes_ledgers()
    system15.print_nodes_ledgers()


if __name__ == "__main__":
    main()
